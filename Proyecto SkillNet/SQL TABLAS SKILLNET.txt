CREATE TABLE CUENTA(
id_cuenta SERIAL,
email VARCHAR(150),
contrasenia VARCHAR(255),
nombre_cuenta VARCHAR(50),
apellido_cuenta VARCHAR(50),
imagen_cuenta TEXT,
fecha_creacion DATE DEFAULT CURRENT_DATE,

CONSTRAINT PK_ID_CUENTA PRIMARY KEY (id_cuenta),
CONSTRAINT CK_EMAIL CHECK (email IS NOT NULL),
CONSTRAINT UQ_EMAIL UNIQUE (email),
CONSTRAINT CK_CONTRASENIA CHECK (contrasenia IS NOT NULL),
CONSTRAINT NN_NOMBRE_CUENTA CHECK (nombre_cuenta IS NOT NULL),
CONSTRAINT NN_APELLIDO_CUENTA CHECK (apellido_cuenta IS NOT NULL)
);






CREATE TABLE EMPRESA(
id_empresa SERIAL,
nombre_empresa VARCHAR(50),

CONSTRAINT PK_ID_EMPRESA PRIMARY KEY (id_empresa),
CONSTRAINT NN_NOMBRE_EMPRESA CHECK (nombre_empresa IS NOT NULL),
CONSTRAINT UQ_NOMBRE_EMPRESA UNIQUE (nombre_empresa)
);






CREATE TABLE DIFICULTAD(
id_dificultad SERIAL,
nivel_dificultad VARCHAR(50),

CONSTRAINT PK_ID_DIFICULTAD PRIMARY KEY (id_dificultad),
CONSTRAINT CK_NIVEL_DIFICULTAD CHECK (nivel_dificultad IS NOT NULL),
CONSTRAINT UQ_NIVEL_DIFICULTAD UNIQUE (nivel_dificultad)
);






CREATE TABLE GENERO(
id_genero SERIAL,
nombre_genero VARCHAR(50),

CONSTRAINT PK_ID_GENERO PRIMARY KEY (id_genero),
CONSTRAINT CK_NOMBRE_GENERO CHECK (nombre_genero IS NOT NULL),
CONSTRAINT UQ_NOMBRE_GENERO UNIQUE (nombre_genero)
);






CREATE TABLE CURSO(
id_curso SERIAL,
titulo_curso VARCHAR(50),
precio MONEY,
resumen_curso VARCHAR(200),
descripcion_curso TEXT,
instructor VARCHAR(50),
imagen_portada TEXT,
requisito VARCHAR(200),
fecha_actualizacion DATE DEFAULT CURRENT_DATE,
id_empresa INT,
id_dificultad INT,
id_genero INT,

CONSTRAINT PK_ID_CURSO PRIMARY KEY (id_curso),
CONSTRAINT CK_TITULO_CURSO CHECK (titulo_curso IS NOT NULL),
CONSTRAINT UQ_TITULO_CURSO UNIQUE (titulo_curso),
CONSTRAINT CK_PRECIO CHECK (precio IS NOT NULL),
CONSTRAINT CK_RESUMEN_CURSO CHECK (resumen_curso IS NOT NULL),
CONSTRAINT CK_DESCRIPCION_CURSO CHECK (descripcion_curso IS NOT NULL),
CONSTRAINT CK_INSTRUCTOR CHECK (instructor IS NOT NULL),
CONSTRAINT CK_IMAGEN_PORTADA CHECK (imagen_portada IS NOT NULL),
CONSTRAINT CK_REQUISITO CHECK (requisito IS NOT NULL),

CONSTRAINT FK_ID_EMPRESA FOREIGN KEY (id_empresa) REFERENCES EMPRESA(id_empresa),
CONSTRAINT FK_ID_DIFICULTAD FOREIGN KEY (id_dificultad) REFERENCES DIFICULTAD(id_dificultad),
CONSTRAINT FK_ID_GENERO FOREIGN KEY (id_genero) REFERENCES GENERO(id_genero)
);






CREATE TABLE FAVORITO(
id_favorito SERIAL,
is_favorito BOOLEAN,
estado VARCHAR(50),
calificación INT,
review TEXT,
id_cuenta INT,
id_curso INT,

CONSTRAINT PK_ID_FAVORITO PRIMARY KEY (id_favorito, id_cuenta, id_curso),
CONSTRAINT CK_CALIFICACION_RANGO CHECK (calificacion >= 1 AND calificacion <= 10),
CONSTRAINT FK_ID_CUENTA FOREIGN KEY (id_cuenta) REFERENCES CUENTA(id_cuenta),
CONSTRAINT FK_ID_CURSO FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso)
);






CREATE TABLE VIDEO(
id_video SERIAL,
video TEXT,
duración VARCHAR(20),
titulo_video VARCHAR(100),
id_curso INT,

CONSTRAINT PK_ID_VIDEO PRIMARY KEY (id_video),
CONSTRAINT CK_VIDEO CHECK (video IS NOT NULL),
CONSTRAINT CK_DURACION CHECK (duración IS NOT NULL),
CONSTRAINT CK_TITULO_VIDEO CHECK (titulo_video IS NOT NULL),
CONSTRAINT FK_ID_CURSO FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso)
);







CREATE TABLE DOCUMENTO(
id_documento SERIAL,
documento TEXT,
titulo_video VARCHAR(100),
id_curso INT,

CONSTRAINT PK_ID_DOCUMENTO PRIMARY KEY (id_documento),
CONSTRAINT CK_DOCUMENTO CHECK (documento IS NOT NULL),
CONSTRAINT CK_TITULO_DOCUMENTO CHECK (titulo_video IS NOT NULL),
CONSTRAINT FK_ID_CURSO FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso)
);







CREATE TABLE TEMARIO(
id_temario SERIAL,
descripcion_temario VARCHAR(200),
id_curso INT,

CONSTRAINT PK_ID_TEMARIO PRIMARY KEY (id_temario),
CONSTRAINT CK_DESCRIPCION_TEMARIO CHECK (descripcion_temario IS NOT NULL),
CONSTRAINT FK_ID_CURSO FOREIGN KEY (id_curso) REFERENCES CURSO(id_curso)
);
